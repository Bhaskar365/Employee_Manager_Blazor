@using Employee_Manager_Client.Pages
@using Employee_Manager_Client.Services
@using Employee_Manager_Models.CustomModels
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;

@inherits LayoutComponentBase

@inject NavigationManager navManager;
@inject ProtectedSessionStorage sessionStorage;
@inject ApiService apiService;

<PageTitle>Employee_Manager_Client</PageTitle>

<div class="page">

    @if (IsAdminLoggedIn) 
    { 
        <div class="sidebar">
            <NavMenu />
        </div>
    }

    <main>
        @if(IsAdminLoggedIn)
        {
            <div class="top-row px-4" style="background: linear-gradient(309deg, #834ce7, #35e795);">
                <p>User</p>
                <a href="#" class="btn btn-warning" @onclick="Logout">Logout</a>
            </div>
        }

        <article class="content px-4">
            <CascadingValue Value="event_notify">
                @Body
            </CascadingValue>
        </article>
    </main>
</div>

<BlazoredToasts 
        Position="Blazored.Toast.Configuration.ToastPosition.TopRight"
        Timeout="10" 
        SuccessClass="success-toast-override" 
        SuccessIcon="fa fa-check" 
        ErrorClass="fa fa-times" />

@code 
{
    public LoginModel? loginModel { get; set; }

    public string Username { get; set; }

    public bool IsAdminLoggedIn = false;

    EventCallback event_notify => EventCallback.Factory.Create(this, NotifyLayout);

    public async void Logout()
    {
        await sessionStorage.DeleteAsync("adminKey");
        await sessionStorage.DeleteAsync("adminName");
        await sessionStorage.DeleteAsync("adminEmail");
        await NotifyLayout();
        StateHasChanged();
        navManager.NavigateTo("/login");
    }

    public async Task NotifyLayout()
    {
        var adminSession = await sessionStorage.GetAsync<string>("adminKey");
        if(adminSession.Success) 
        {
            IsAdminLoggedIn = true;
        }
        else
        {
            IsAdminLoggedIn = false;
            navManager.NavigateTo("/login");
        }
    }
}
