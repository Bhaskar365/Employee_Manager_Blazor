@page "/employee/add"
@using Employee_Manager_Client.Services;
@using Employee_Manager_Models;
@inject ApiService apiService;

<div class="container">
    <h3>Add Employee</h3>
    <hr />

    <EditForm Model="@employeeModel" OnValidSubmit="SubmitForm" id="editform">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <!-- Employee Details Section -->
        <div class="mb-3">
            <label for="FirstName" class="form-label">First Name</label>
            <InputText id="FirstName" @bind-Value="employeeModel.FirstName" class="form-control" />
            <ValidationMessage For="() => employeeModel.FirstName" />
        </div>

        <div class="mb-3">
            <label for="LastName" class="form-label">Last Name</label>
            <InputText id="LastName" @bind-Value="employeeModel.LastName" class="form-control" />
            <ValidationMessage For="() => employeeModel.LastName" />
        </div>

        <div class="mb-3">
            <label for="Email" class="form-label">Email</label>
            <InputText id="Email" @bind-Value="employeeModel.Email" class="form-control" />
            <ValidationMessage For="() => employeeModel.Email" />
        </div>

        <div class="mb-3">
            <label for="Gender" class="form-label">Gender</label>
            <InputSelect id="Gender" @bind-Value="employeeModel.Gender" class="form-control">
                @foreach (var gender in Enum.GetValues(typeof(Gender)))
                {
                    <option value="@gender">@gender</option>
                }
            </InputSelect>
            <ValidationMessage For="() => employeeModel.Gender" />
        </div>

        <div class="mb-3">
            <label for="DOB" class="form-label">Date of Birth</label>
            <InputDate id="DOB" @bind-Value="employeeModel.DOB" class="form-control" />
            <ValidationMessage For="() => employeeModel.DOB" />
        </div>

        <!-- Address Details Section -->
        <div class="mb-3">
            <label for="Street" class="form-label">Street</label>
            <InputText id="Street" @bind-Value="employeeModel.Address.Street" class="form-control" />
        </div>

        <div class="mb-3">
            <label for="State" class="form-label">State</label>
            <InputText id="State" @bind-Value="employeeModel.Address.State" class="form-control" />
        </div>

        <div class="mb-3">
            <label for="Country" class="form-label">Country</label>
            <InputText id="Country" @bind-Value="employeeModel.Address.Country" class="form-control" />
        </div>

        <div class="mb-3">
            <label for="ZipCode" class="form-label">Zip Code</label>
            <InputText id="ZipCode" @bind-Value="employeeModel.Address.ZipCode" class="form-control" />
        </div>

        <!-- Department Details Section -->
        <div class="mb-3">
            <label for="DepartmentId" class="form-label">Department</label>
            <InputSelect id="DepartmentId" @bind-Value="employeeModel.DepartmentId" class="form-control">
                @foreach (var dep in departments)
                {
                    <option value="@dep.DepartmentId">@dep.DepartmentName</option>
                }
            </InputSelect>
        </div>

        <!-- Joining Date Section -->
        <div class="mb-3">
            <label for="JoiningDate" class="form-label">Joining Date</label>
            <InputDate id="JoiningDate" @bind-Value="employeeModel.JoiningDate" class="form-control" />
            <ValidationMessage For="() => employeeModel.JoiningDate" />
        </div>

        <!-- Submit Button -->
        <div class="mb-3">
            <button type="submit"
                    class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Submit
            </button>
        </div>
    </EditForm>
</div>

<!-- Modal -->
@if (Popup)
{
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
}


@code 
{
    [CascadingParameter]
    public EventCallback notify { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await notify.InvokeAsync();
        }
    }

    private string Message { get; set; }
    private bool Popup = false;

    public bool IsSuccessful { get; set; } = false;
    public bool IsUnsuccessful { get; set; } = false;

    private Employee employeeModel = new Employee();
    private IEnumerable<Department> departments = new List<Department>();

    private async Task SubmitForm()
    {
        Popup = true;
        bool success = await apiService.CreateEmp(employeeModel);

        if (success)
        {
            IsSuccessful = true;
            IsUnsuccessful = false;
            Message = "Successfully created employee";
            // Successfully created
        }
        else
        {
            IsSuccessful = false;
            IsUnsuccessful = true;
            Message = "Error creating employee";
            Popup = true;
            // Handle the case where employee creation failed
        }
    }

    protected override async Task OnInitializedAsync()
    {
        departments = await apiService.GetAllDepartments();
        employeeModel.DepartmentId = departments.FirstOrDefault()?.DepartmentId ?? 1;
    }
}

